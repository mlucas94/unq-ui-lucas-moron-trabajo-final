[{"C:\\Users\\Lucas\\Desktop\\desktop\\programming\\Interfaces de usuario\\unq-ui-lucas-moron-trabajo-final\\integrador-ui\\src\\index.js":"1","C:\\Users\\Lucas\\Desktop\\desktop\\programming\\Interfaces de usuario\\unq-ui-lucas-moron-trabajo-final\\integrador-ui\\src\\App.js":"2","C:\\Users\\Lucas\\Desktop\\desktop\\programming\\Interfaces de usuario\\unq-ui-lucas-moron-trabajo-final\\integrador-ui\\src\\reportWebVitals.js":"3","C:\\Users\\Lucas\\Desktop\\desktop\\programming\\Interfaces de usuario\\unq-ui-lucas-moron-trabajo-final\\integrador-ui\\src\\components\\Game.jsx":"4","C:\\Users\\Lucas\\Desktop\\desktop\\programming\\Interfaces de usuario\\unq-ui-lucas-moron-trabajo-final\\integrador-ui\\src\\components\\Main.jsx":"5"},{"size":548,"mtime":1606859727766,"results":"6","hashOfConfig":"7"},{"size":435,"mtime":1606429413008,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":7004,"mtime":1606888702105,"results":"10","hashOfConfig":"7"},{"size":687,"mtime":1606860304563,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1eq8yv2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lucas\\Desktop\\desktop\\programming\\Interfaces de usuario\\unq-ui-lucas-moron-trabajo-final\\integrador-ui\\src\\index.js",[],["26","27"],"C:\\Users\\Lucas\\Desktop\\desktop\\programming\\Interfaces de usuario\\unq-ui-lucas-moron-trabajo-final\\integrador-ui\\src\\App.js",[],["28","29"],"C:\\Users\\Lucas\\Desktop\\desktop\\programming\\Interfaces de usuario\\unq-ui-lucas-moron-trabajo-final\\integrador-ui\\src\\reportWebVitals.js",[],["30","31"],"C:\\Users\\Lucas\\Desktop\\desktop\\programming\\Interfaces de usuario\\unq-ui-lucas-moron-trabajo-final\\integrador-ui\\src\\components\\Game.jsx",["32","33","34","35"],"import React, { useState, useEffect } from 'react'\r\n\r\nconst Game = (props) => {\r\n/*TODO\r\n Agregar componentes\r\n    Status oponente: define si se juega contra cpu u otro jugador\r\n    Barra de opciones con botones\r\n    Area de player: contador de victorias, ultima opcion elegida\r\n    Area de CPU/otro player: idem a player\r\n    Area con numero de partidas jugadas\r\n    Boton de reiniciar contadores\r\n    boton volver a menu\r\n    popup/alerta que simule espera; puede servir como 'cortina' para vs local\r\n    popup/alerta que muestre quien gano y pregunte si se quiere continuar jugando\r\n */\r\n\r\n //TODO 1/12 Agregar un hook sesion que sirva para diferenciar si se esta jugando o se termino\r\n //Alt: Bloquear botones cuando el jugador 2 hace su eleccion o ponercurrent player en null\r\n \r\n\r\n\r\nconst [player1, setPlayer1] = useState({\r\n    choice : null,\r\n    wins : 0\r\n  })\r\n\r\n  const [player2, setPlayer2] = useState({\r\n    choice : null,\r\n    wins : 0\r\n  });\r\n\r\n  const [gameData, setGameData] = useState({\r\n      currentPlayer : \"player 1\",\r\n      gamesPlayed : 0,\r\n      winner : null,\r\n      victoryConditionP1 : [[2,3], [0,4], [1,3], [1,4], [0,2]]\r\n      //Cada lista corresponde a las opciones que pierden frente al de esa posicion en la lista options\r\n      //Ej. index 0 = roca, gana frente a index 2 y 3, tijera y lagarto\r\n  })\r\n\r\n  const [gameInProgress, setGameInProgress] = useState(true)\r\n\r\n  const options = [\"rock\", \"paper\", \"scissors\", \"lizard\", \"Spock\"];\r\n\r\n  const vsPlayer = props.location.state.vsPlayer; // false = vsCpu, true = vsPlayer\r\n\r\n  //https://stackoverflow.com/questions/54069253/usestate-set-method-not-reflecting-change-immediately\r\n  useEffect(() => {\r\n    if(player2.choice && player1.choice) {\r\n      winner();\r\n    }\r\n  },[player2.choice])\r\n\r\n  useEffect(() => {\r\n    if(player1.choice) {\r\n      play();\r\n    }\r\n  },[player1.choice])\r\n\r\n  const winner = () => {\r\n\r\n      setGameInProgress(false);\r\n\r\n      let value = player1Victory();\r\n\r\n      let played = gameData.gamesPlayed;\r\n      \r\n      if(player1.choice == player2.choice) {\r\n          setGameData({...gameData, winner : \"Draw\", gamesPlayed : played + 1})\r\n          return;\r\n      } else if (value) {\r\n        setGameData({...gameData, winner : \"Player 1\", gamesPlayed : played + 1})\r\n        setPlayer1({...player1, wins : player1.wins + 1});\r\n      } else {\r\n        setGameData({...gameData, winner : \"Player 2\", gamesPlayed : played + 1})\r\n        setPlayer2({...player2, wins : player2.wins + 1});\r\n      }\r\n  }\r\n\r\n  const player1Victory = () => {\r\n    //Cambiar por matriz de resultados\r\n    const indexP1 = options.indexOf(player1.choice)\r\n    const indexP2 = options.indexOf(player2.choice)\r\n    console.log(\"..........\")\r\n    console.log(indexP1)\r\n    console.log(\"..........\")\r\n    console.log(indexP2)\r\n    console.log(\"..........\")\r\n    let value = gameData.victoryConditionP1[indexP1].includes(indexP2)\r\n    return value\r\n  }\r\n\r\n  const handleChoose = (choice) => {\r\n\r\n    console.log(\"&&&&&&&&&\")\r\n    console.log(choice.option)\r\n    \r\n    if(gameData.currentPlayer == \"player 1\") {\r\n      setPlayer1({...player1, choice : choice.option})\r\n    } else {\r\n      setPlayer2({...player2, choice : choice.option})\r\n    }\r\n  }\r\n   \r\n  const play = () => {\r\n\r\n    //Usar un switch para agregar casos de 2 jugadores\r\n    if (vsPlayer) {\r\n      setGameData({...gameData, currentPlayer : \"player 2\"})\r\n      \r\n    } else {\r\n      let computerChoice = pcChoice()\r\n      console.log(\"computerChoice is\")\r\n      console.log(computerChoice)\r\n      setPlayer2({\r\n        ...player2,\r\n        choice : computerChoice\r\n      })\r\n      console.log(player2.choice)\r\n    }\r\n\r\n  }\r\n\r\n  const pcChoice = () => {\r\n    return options[Math.floor(Math.random() * options.length)];\r\n  }\r\n\r\n  const reset = () => {\r\n    setGameData({...gameData, currentPlayer : \"player 1\", winner: null, gamesPlayed : 0})\r\n    setPlayer1({...player1, choice : null, wins: 0})\r\n    setPlayer2({...player1, choice : null, wins: 0})\r\n    setGameInProgress(true);\r\n  }\r\n\r\n  const playAgain = () => {\r\n    setGameData({...gameData, currentPlayer : \"player 1\", winner: null});\r\n    setPlayer1({...player1, choice : null});\r\n    setPlayer2({...player2, choice : null});\r\n    setGameInProgress(true);\r\n  }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n          <div className=\"row d-flex justify-content-center align-items-end\">\r\n              <figure>\r\n                <figcaption align=\"center\">rock</figcaption>\r\n                <button type=\"button\" className=\"btn btn-circle border\" disabled={!gameInProgress} onClick={ () => handleChoose({option : \"rock\"})}>\r\n                <img src=\"choices/rock.png\" alt=\"rock\" width=\"50\" heigh=\"50\"/></button>\r\n                <figcaption align=\"center\">rock</figcaption>\r\n              </figure>\r\n              <figure>\r\n                <figcaption align=\"center\" >paper</figcaption>\r\n                <button type=\"button\" className=\"btn btn-circle border\" disabled={!gameInProgress} onClick={ () => handleChoose({option : \"paper\"})}>\r\n                <img src=\"choices/paper.png\" alt=\"paper\" width=\"50\" heigh=\"50\" /></button>\r\n                <figcaption align=\"center\" >paper</figcaption>\r\n              </figure>\r\n              <figure>\r\n                <figcaption align=\"center\">scissors</figcaption>\r\n                <button type=\"button\" className=\"btn btn-circle border\" disabled={!gameInProgress} onClick={ () => handleChoose({option : \"scissors\"})}>\r\n                <img src=\"choices/scissors.png\" alt=\"scissors\" width=\"50\" heigh=\"50\" /></button>\r\n                <figcaption align=\"center\">scissors</figcaption>\r\n              </figure>\r\n              <figure>\r\n                <figcaption align=\"center\">lizard</figcaption>\r\n                <button type=\"button\" className=\"btn btn-circle border\" disabled={!gameInProgress} onClick={ () => handleChoose({option : \"lizard\"})}>\r\n                <img src=\"choices/lizard.png\" alt=\"lizard\" width=\"50\" heigh=\"200\" /></button>\r\n                <figcaption align=\"center\">lizard</figcaption>\r\n              </figure>\r\n              <figure>\r\n                <figcaption align=\"center\">Spock</figcaption>\r\n                <button type=\"button\" className=\"btn btn-circle border\" disabled={!gameInProgress} onClick={ () => handleChoose({option : \"Spock\"})}>\r\n                <img src=\"choices/Spock.png\" alt=\"Spock\" width=\"50\" heigh=\"50\" /></button>\r\n                <figcaption align=\"center\">Spock</figcaption>\r\n              </figure>\r\n          </div>\r\n          <div> {!!gameData.winner ? gameData.winner : \"Waiting\" } </div>\r\n          <div> {gameData.gamesPlayed} </div>\r\n          <div> {player1.wins} </div>\r\n          <div> {!!player2.choice ? player2.choice : \"Waiting p2\"} </div>\r\n          <div> {player2.wins} </div>\r\n          <button onClick={playAgain} disabled={gameInProgress}>Continue</button>\r\n          <button onClick={reset} disabled={gameInProgress}>Reset</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Game;","C:\\Users\\Lucas\\Desktop\\desktop\\programming\\Interfaces de usuario\\unq-ui-lucas-moron-trabajo-final\\integrador-ui\\src\\components\\Main.jsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"36","replacedBy":"40"},{"ruleId":"38","replacedBy":"41"},{"ruleId":"36","replacedBy":"42"},{"ruleId":"38","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":52,"column":5,"nodeType":"46","endLine":52,"endColumn":21,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"48","line":58,"column":5,"nodeType":"46","endLine":58,"endColumn":21,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":68,"column":25,"nodeType":"52","messageId":"53","endLine":68,"endColumn":27},{"ruleId":"50","severity":1,"message":"51","line":98,"column":31,"nodeType":"52","messageId":"53","endLine":98,"endColumn":33},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],["54"],["55"],["54"],["55"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'player1.choice' and 'winner'. Either include them or remove the dependency array.","ArrayExpression",["56"],"React Hook useEffect has a missing dependency: 'play'. Either include it or remove the dependency array.",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},"Update the dependencies array to be: [player1.choice, player2.choice, winner]",{"range":"62","text":"63"},"Update the dependencies array to be: [play, player1.choice]",{"range":"64","text":"65"},[1756,1772],"[player1.choice, player2.choice, winner]",[1850,1866],"[play, player1.choice]"]